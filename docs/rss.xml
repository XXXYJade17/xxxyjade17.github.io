<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Blog Title</title><link>https://xxxyjade17.github.io</link><description>Blog description</description><copyright>Blog Title</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://xxxyjade17.github.io</link></image><lastBuildDate>Sun, 11 May 2025 12:17:18 +0000</lastBuildDate><managingEditor>Blog Title</managingEditor><ttl>60</ttl><webMaster>Blog Title</webMaster><item><title>MySQL - DQL</title><link>https://xxxyjade17.github.io/post/MySQL%20-%20DQL.html</link><description># DQL

## 条件查询:
### select 字段表 from 表名 where 条件列表;
### 条件列表
- and  &amp;&amp;  :  与
- or  ||  :  或
- not  !  :  非
- is null  :  是否空
- &lt;&gt;  !=  :  不等
- between  __  and  __  : 之间
- in( __ , __ , ... ) : 满足条件
- like '_%'  : 模糊匹配   _单个字符   %任意字符
***
## 聚合函数
- count( )  :  统计行数
- avg( )  :  平均值
- max( )  :  最大值
- min( )  :  最小值
- sum( )  :  求和
***
## 分组查询
### select 字段表 from 表名 group by 字段表 having 筛选条件;
### 执行顺序 : where &gt; 聚合函数 &gt; having
***
## 排序查询 ( 默认升序 ) 
### 降序查询 : 
### select 字段表 from 表名 order by 字段表 desc;
### 升序查询 : 
### select 字段表 from 表名 order by 字段表 asc;
***
## 分页查询
### select 字段表 from 表名 limit 起始索引,查询记录数;
### 起始索引默认为0
***
## DQL执行顺序
- select        4      
- from         1        
- where       2        
- group by  ____  having      3       
- order by   5        
- limit          6        。</description><guid isPermaLink="true">https://xxxyjade17.github.io/post/MySQL%20-%20DQL.html</guid><pubDate>Sun, 11 May 2025 12:16:53 +0000</pubDate></item><item><title>JDBC</title><link>https://xxxyjade17.github.io/post/JDBC.html</link><description># JDBC是什么
JDBC（Java DataBase Connectivity）使用 Java 语言操作关系型数据库的一套 API
# 导入依赖
```xml
&lt;dependency&gt;
        &lt;groupId&gt;com.mysql&lt;/groupId&gt;
        &lt;artifactId&gt;mysql-connector-j&lt;/artifactId&gt;
        &lt;version&gt;8.0.33&lt;/version&gt;
&lt;/dependency&gt;
```
# 简单示例
```java
[1.注册驱动]
Class.forName('com.mysql.cj.jdbc.Driver');

[2.获取数据库连接]
//数据库地址
String url='jdbc:mysql://localhost:3306/web';     
//数据库用户名
String username='root';
//密码
String password='xxxyjade17';
//创建连接对象
Connection connection=DriverManager.getConnection(url,username,password);

[3.获取SQL语句执行]
//创建预执行对象
Statement statement=connection.createStatement();

[4.执行sql]
//接收返回值
int i=statement.executeUpdate('update user set age = 30 where id = 1');

[5.释放资源]
statement.close();
connection.close();
```
# 预编译示例
```java
[1.数据库配置]
String url='jdbc:mysql://localhost:3306/web';
String username='root';
String password='xxxyjade17';
//数据库操作语句
String sql='SELECT id,username,password,name,age from user where username=? and password=?';

[2.创建对象]
//连接对象
Connection connection = null;
//预编译对象
PreparedStatement stmt = null;
//查询返回的结果
ResultSet rs = null;  

[3.执行]
try{
    //创建驱动
    Class.forName('com.mysql.cj.jdbc.Driver');
    //获取连接
    connection=DriverManager.getConnection(url,username,password);
    //获取预编译对象
    stmt=connection.prepareStatement(sql);
    //赋值
    stmt.setString(1,'daqiao');
    stmt.setString(2,'123456');
    //执行操作
    rs=stmt.executeQuery();
    while(rs.next()){
        User user=new User(
            rs.getInt('id'),
            rs.getString('username'),
            rs.getString('password'),
            rs.getString('name'),
            rs.getInt('age')
        );
        System.out.println(user);
    }
} catch (ClassNotFoundException e) {
    throw new RuntimeException(e);
} catch (SQLException e) {
    throw new RuntimeException(e);
} finally {
    try{
        if(rs!=null)rs.close();
        if(stmt!=null)stmt.close();
        if(connection!=null)connection.close();
    } catch (SQLException e) {
        throw new RuntimeException(e);
    }
}
```
。</description><guid isPermaLink="true">https://xxxyjade17.github.io/post/JDBC.html</guid><pubDate>Sun, 11 May 2025 11:52:01 +0000</pubDate></item></channel></rss>